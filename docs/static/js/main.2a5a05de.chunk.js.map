{"version":3,"sources":["components/TodoAddNew.tsx","actions/todo.ts","components/TodoList.tsx","components/Todo.tsx","reducer/todoReducer.ts","store/store.ts","App.tsx","index.tsx"],"names":["TodoAddNew","dispatch","useState","formValue","setFormValue","todoRef","useRef","onSubmit","e","preventDefault","trim","length","type","payload","name","toggleComplete","current","focus","placeholder","className","onChange","target","value","autoFocus","ref","TodoList","todos","localStorage","setItem","JSON","stringify","style","textAlign","fontSize","display","map","todo","idx","cursor","textDecoration","onClick","deleteTodo","toggleTodo","Todo","useDispatch","useSelector","state","todoStore","countToggle","filter","INITIAL_STATE","parse","getItem","reducers","combineReducers","action","i","splice","store","createStore","devToolsEnhancer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a5a05de.chunk.js","sourcesContent":["import { ChangeEvent, FormEvent, useRef, useState } from 'react';\nimport { todoAdd } from '../actions/todo';\nimport { DispatchType } from '../interfaces/interfaces';\n\ntype Args = {\n\tdispatch: DispatchType;\n};\n\nexport const TodoAddNew = ({ dispatch }: Args) => {\n\tconst [formValue, setFormValue] = useState('');\n\n\tconst todoRef = useRef<HTMLInputElement>(null); //guardar el foco del input como  referencia\n\n\tconst handleOnchange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n\t\tsetFormValue(target.value);\n\t};\n\n\tconst handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\n\t\tif (formValue.trim().length > 0) {\n\t\t\tdispatch(todoAdd({ name: formValue, toggleComplete: false }));\n\t\t\tsetFormValue('');\n\t\t\ttodoRef.current?.focus();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<label>Escribe tu tarea:</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Tarea\"\n\t\t\t\t\tclassName=\"form form-control mt-2 \"\n\t\t\t\t\tonChange={handleOnchange}\n\t\t\t\t\tvalue={formValue}\n\t\t\t\t\tautoFocus\n\t\t\t\t\tref={todoRef}\n\t\t\t\t/>\n\n\t\t\t\t<button type=\"submit\" className=\"btn btn-success mt-4 \">\n\t\t\t\t\tAñadir tarea\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n","import { Todo, TodoAction } from '../interfaces/interfaces';\n\nexport const todoAdd = (todo: Todo): TodoAction => ({\n\ttype: 'Todo Add New',\n\tpayload: todo,\n});\n\nexport const toggleTodo = (idx: number): TodoAction => ({\n\ttype: 'Toggle Todo',\n\tpayload: { idx },\n});\n\nexport const deleteTodo = (idx: number): TodoAction => ({\n\ttype: 'Delete Todo',\n\tpayload: { idx },\n});\n","import { deleteTodo, toggleTodo } from '../actions/todo';\nimport { DispatchType, Todo } from '../interfaces/interfaces';\n\ntype Args = {\n\tdispatch: DispatchType;\n\ttodos: Todo[];\n};\n\nexport const TodoList = ({ dispatch, todos }: Args) => {\n\tlocalStorage.setItem('todoRedux', JSON.stringify(todos));\n\n\treturn (\n\t\t<div className=\"mt-5\" style={{ textAlign: 'left' }}>\n\t\t\t<span style={{ fontSize: '1rem', display: 'block' }} className=\"mb-3\">\n\t\t\t\tPresiona sobre la tarea para marcarla como completada\n\t\t\t</span>\n\t\t\t<ol>\n\t\t\t\t{todos.map((todo, idx) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\ttextDecoration: todo.toggleComplete ? 'line-through' : '',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"mt-2 App-link\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-danger me-3\"\n\t\t\t\t\t\t\tonClick={() => dispatch(deleteTodo(idx))}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<span onClick={() => dispatch(toggleTodo(idx))}>{todo.name}</span>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</div>\n\t);\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { DispatchType, TodoState } from '../interfaces/interfaces';\nimport { TodoAddNew } from './TodoAddNew';\nimport { TodoList } from './TodoList';\n\ninterface RootState {\n\ttodoStore: TodoState;\n}\n\nexport const Todo = () => {\n\tconst dispatch: DispatchType = useDispatch();\n\n\tconst { todos } = useSelector((state: RootState) => state.todoStore);\n\n\tconst countToggle = todos.filter(\n\t\t(todo) => todo.toggleComplete === true\n\t).length;\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Todo App with Redux</h1>\n\t\t\t<span>\n\t\t\t\t{countToggle} de {todos.length} tareas completadas\n\t\t\t</span>\n\t\t\t<hr />\n\t\t\t<TodoAddNew dispatch={dispatch} />\n\t\t\t<TodoList dispatch={dispatch} todos={todos} />\n\t\t</div>\n\t);\n};\n","import { TodoAction, TodoState } from '../interfaces/interfaces';\n\nconst INITIAL_STATE: TodoState = {\n\ttodos: JSON.parse(localStorage.getItem('todoRedux')!) || [],\n};\n\nexport const todoReducer = (\n\tstate: TodoState = INITIAL_STATE,\n\taction: TodoAction\n) => {\n\tswitch (action.type) {\n\t\tcase 'Todo Add New':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: [...state.todos, action.payload],\n\t\t\t};\n\n\t\tcase 'Toggle Todo':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.map(({ ...todo }, i) => {\n\t\t\t\t\tif (state.todos[i] === state.todos[action.payload.idx]) {\n\t\t\t\t\t\ttodo.toggleComplete = !todo.toggleComplete;\n\t\t\t\t\t}\n\t\t\t\t\treturn todo;\n\t\t\t\t}),\n\t\t\t};\n\n\t\tcase 'Delete Todo':\n\t\t\tstate.todos.splice(action.payload.idx, 1); //Nota: este método modifica el array de origen\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: [...state.todos],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers, createStore, Store } from 'redux';\nimport { DispatchType, TodoAction, TodoState } from '../interfaces/interfaces';\nimport { todoReducer } from '../reducer/todoReducer';\nimport { devToolsEnhancer } from 'redux-devtools-extension/logOnlyInProduction';\n\nconst reducers = combineReducers({\n\ttodoStore: todoReducer,\n});\nexport const store: Store<TodoState, TodoAction> & {\n\tdispatch: DispatchType;\n} = createStore(reducers, devToolsEnhancer({}));\n","import { Provider } from 'react-redux';\nimport './App.css';\nimport { Todo } from './components/Todo';\nimport { store } from './store/store';\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className=\"App-header App\">\n\t\t\t\t<Todo />\n\t\t\t</div>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootswatch/dist/cerulean/bootstrap.min.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}